backendVersion = '0.0.0'
artifactId = ''

pipeline {

    agent any

    stages {
        stage('Internal testing') {
            agent {
                docker { image 'maven:3.6.3-jdk-11-slim' }
            }
            steps {
                sh 'mvn --version'
                sh 'echo "Iniciando pruebas"'
                sh 'cd /tmp && ls'
                sh 'echo "Obteniendo dependencias"'
                sh 'mvn -B -e -C -T 1C org.apache.maven.plugins:maven-dependency-plugin:3.0.2:go-offline'
                sh 'echo "Ejecutar pruebas unitarias"'
                sh 'mvn test'
            }
        }

        stage('Prepare backend version') {
            agent {
                docker { image 'maven:3.6.3-jdk-11-slim' }
            }
            steps {
                echo "Getting backend version with maven"
                echo "Before ${backendVersion}"
                sh 'mvn help:evaluate -Dexpression=project.version -q -DforceStdout > version.txt'
                sh 'mvn help:evaluate -Dexpression=project.artifactId -q -DforceStdout > artifactId.txt'
                script {
                    backendVersion = readFile('artifactId.txt') + readFile('version.txt').trim() + "-" + env.BUILD_NUMBER
                    artifactId = readFile('artifactId.txt')
                }
                echo "After ${backendVersion}"
                sh 'mvn package'
                sh "mv target/${artifactId}.jar target/${backendVersion}"
            }
        }
    }

    post {
        always {
            echo "Down ephemeral environment...."
            archiveArtifacts artifacts: "target/${backendVersion}.jar", onlyIfSuccessful: true
        }

        success {
            echo "success"
        }

        unstable {
            echo "unstable"
        }

        failure {
            echo "failure"
        }

        changed {
            echo "changed"
        }
    }
}